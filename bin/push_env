#!/usr/bin/env bash
set -euo pipefail

# Push or update vars that exist locally and not in AWS Parameter Store

app_name="$1"
app_env="$2"
in_env_file="${3:-.env.$app_env}"
prefix="/$app_env/$app_name/"
key_id="$AWS_KMS_KEY_ID"

# shellcheck disable=SC2016
remote_list=$(aws --region us-east-1 ssm get-parameters-by-path \
                  --with-decryption \
                  --path "$prefix" \
                  --output=text \
                  --query 'Parameters[*].[join(`=`, [Name, Value])][] | join(`"\n"`, @)' | sort)

local_list=''
while IFS=$' \t\n\r' read -r line
do
    var_name=''
    var=''
    first="${line:0:1}"
    if [ "$first" != "#" ] && [ "x$line" != x ]
    then
        var_name=${line%%"="*}
        var=${line#*"="}
        if [[ ( "${var:0:1}" == '"' && "${var: -1:1}" == '"' ) || ( "${var:0:1}" == "'" && "${var: -1:1}" == "'" ) ]]
        then
            var=$(eval echo "$var")
        fi
        local_list="$local_list$prefix$var_name=$var\n"
    fi
done < "$in_env_file"

local_list=$(echo -e "${local_list%??}" | sort)

# shows what exists local and not in AWS
new_vars=$(diff -B \
                --unchanged-line-format= \
                --old-line-format= \
                --new-line-format='%L' \
                <(echo "$remote_list") <(echo "$local_list") || true)

new_vars=$(printf '%s' "$new_vars" | sed -Ee 's;^[a-z0-9_/]+;;')

updates=''
while IFS=$' \t\n\r' read -r line
do
    if [ "x$line" != x ]
    then
        var_name=''
        var=''
        var_name=${line%%"="*}
        var=${line#*"="}
        json="{ \"Name\": \"$prefix$var_name\", \
    \"Value\": \"$var\", \
    \"Type\": \"SecureString\", \
    \"KeyId\": \"$key_id\", \
    \"Overwrite\": true }"

        updates="${updates}aws ssm put-parameter --region us-east-1 --cli-input-json '$json'\n"
    fi
done <<< "$new_vars"
updates=$(echo -ne "${updates%??}")

while read -r line; do printf "%q\n" "$line"; done <<< "$updates" | xargs -L1 -P5 -J{} bash -c {}
